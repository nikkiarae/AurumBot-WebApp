"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/safe-compare";
exports.ids = ["vendor-chunks/safe-compare"];
exports.modules = {

/***/ "(rsc)/./node_modules/safe-compare/index.js":
/*!********************************************!*\
  !*** ./node_modules/safe-compare/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * @author Michael Raith\n * @date   24.02.2016 12:04\n */\n\n\n\nvar crypto = __webpack_require__(/*! crypto */ \"crypto\");\nvar bufferAlloc = __webpack_require__(/*! buffer-alloc */ \"(rsc)/./node_modules/buffer-alloc/index.js\");\n\n\n/**\n * Do a constant time string comparison. Always compare the complete strings\n * against each other to get a constant time. This method does not short-cut\n * if the two string's length differs.\n *\n * @param {string} a\n * @param {string} b\n *\n * @return {boolean}\n */\nvar safeCompare = function safeCompare(a, b) {\n    var strA = String(a);\n    var strB = String(b);\n    var lenA = strA.length;\n    var result = 0;\n\n    if (lenA !== strB.length) {\n        strB = strA;\n        result = 1;\n    }\n\n    for (var i = 0; i < lenA; i++) {\n        result |= (strA.charCodeAt(i) ^ strB.charCodeAt(i));\n    }\n\n    return result === 0;\n};\n\n\n/**\n * Call native \"crypto.timingSafeEqual\" methods.\n * All passed values will be converted into strings first.\n *\n * Runtime is always corresponding to the length of the first parameter (string\n * a).\n *\n * @param {string} a\n * @param {string} b\n *\n * @return {boolean}\n */\nvar nativeTimingSafeEqual = function nativeTimingSafeEqual(a, b) {\n    var strA = String(a);\n    var strB = String(b);\n    var aLen = Buffer.byteLength(strA);\n    var bLen = Buffer.byteLength(strB);\n\n    // Always use length of a to avoid leaking the length. Even if this is a\n    // false positive because one is a prefix of the other, the explicit length\n    // check at the end will catch that.\n    var bufA = bufferAlloc(aLen, 0, 'utf8');\n    bufA.write(strA);\n    var bufB = bufferAlloc(aLen, 0, 'utf8');\n    bufB.write(strB);\n\n    return crypto.timingSafeEqual(bufA, bufB) && aLen === bLen;\n};\n\n\nmodule.exports = (\n    typeof crypto.timingSafeEqual !== 'undefined' ?\n        nativeTimingSafeEqual :\n        safeCompare\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc2FmZS1jb21wYXJlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViLGFBQWEsbUJBQU8sQ0FBQyxzQkFBUTtBQUM3QixrQkFBa0IsbUJBQU8sQ0FBQyxnRUFBYzs7O0FBR3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0IsVUFBVTtBQUM5QjtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL25pa2tpcmFlL0Rlc2t0b3AvQXVydW1Cb3QvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3NhZmUtY29tcGFyZS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhdXRob3IgTWljaGFlbCBSYWl0aFxuICogQGRhdGUgICAyNC4wMi4yMDE2IDEyOjA0XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgY3J5cHRvID0gcmVxdWlyZSgnY3J5cHRvJyk7XG52YXIgYnVmZmVyQWxsb2MgPSByZXF1aXJlKCdidWZmZXItYWxsb2MnKTtcblxuXG4vKipcbiAqIERvIGEgY29uc3RhbnQgdGltZSBzdHJpbmcgY29tcGFyaXNvbi4gQWx3YXlzIGNvbXBhcmUgdGhlIGNvbXBsZXRlIHN0cmluZ3NcbiAqIGFnYWluc3QgZWFjaCBvdGhlciB0byBnZXQgYSBjb25zdGFudCB0aW1lLiBUaGlzIG1ldGhvZCBkb2VzIG5vdCBzaG9ydC1jdXRcbiAqIGlmIHRoZSB0d28gc3RyaW5nJ3MgbGVuZ3RoIGRpZmZlcnMuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGFcbiAqIEBwYXJhbSB7c3RyaW5nfSBiXG4gKlxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xudmFyIHNhZmVDb21wYXJlID0gZnVuY3Rpb24gc2FmZUNvbXBhcmUoYSwgYikge1xuICAgIHZhciBzdHJBID0gU3RyaW5nKGEpO1xuICAgIHZhciBzdHJCID0gU3RyaW5nKGIpO1xuICAgIHZhciBsZW5BID0gc3RyQS5sZW5ndGg7XG4gICAgdmFyIHJlc3VsdCA9IDA7XG5cbiAgICBpZiAobGVuQSAhPT0gc3RyQi5sZW5ndGgpIHtcbiAgICAgICAgc3RyQiA9IHN0ckE7XG4gICAgICAgIHJlc3VsdCA9IDE7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5BOyBpKyspIHtcbiAgICAgICAgcmVzdWx0IHw9IChzdHJBLmNoYXJDb2RlQXQoaSkgXiBzdHJCLmNoYXJDb2RlQXQoaSkpO1xuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQgPT09IDA7XG59O1xuXG5cbi8qKlxuICogQ2FsbCBuYXRpdmUgXCJjcnlwdG8udGltaW5nU2FmZUVxdWFsXCIgbWV0aG9kcy5cbiAqIEFsbCBwYXNzZWQgdmFsdWVzIHdpbGwgYmUgY29udmVydGVkIGludG8gc3RyaW5ncyBmaXJzdC5cbiAqXG4gKiBSdW50aW1lIGlzIGFsd2F5cyBjb3JyZXNwb25kaW5nIHRvIHRoZSBsZW5ndGggb2YgdGhlIGZpcnN0IHBhcmFtZXRlciAoc3RyaW5nXG4gKiBhKS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gYVxuICogQHBhcmFtIHtzdHJpbmd9IGJcbiAqXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG52YXIgbmF0aXZlVGltaW5nU2FmZUVxdWFsID0gZnVuY3Rpb24gbmF0aXZlVGltaW5nU2FmZUVxdWFsKGEsIGIpIHtcbiAgICB2YXIgc3RyQSA9IFN0cmluZyhhKTtcbiAgICB2YXIgc3RyQiA9IFN0cmluZyhiKTtcbiAgICB2YXIgYUxlbiA9IEJ1ZmZlci5ieXRlTGVuZ3RoKHN0ckEpO1xuICAgIHZhciBiTGVuID0gQnVmZmVyLmJ5dGVMZW5ndGgoc3RyQik7XG5cbiAgICAvLyBBbHdheXMgdXNlIGxlbmd0aCBvZiBhIHRvIGF2b2lkIGxlYWtpbmcgdGhlIGxlbmd0aC4gRXZlbiBpZiB0aGlzIGlzIGFcbiAgICAvLyBmYWxzZSBwb3NpdGl2ZSBiZWNhdXNlIG9uZSBpcyBhIHByZWZpeCBvZiB0aGUgb3RoZXIsIHRoZSBleHBsaWNpdCBsZW5ndGhcbiAgICAvLyBjaGVjayBhdCB0aGUgZW5kIHdpbGwgY2F0Y2ggdGhhdC5cbiAgICB2YXIgYnVmQSA9IGJ1ZmZlckFsbG9jKGFMZW4sIDAsICd1dGY4Jyk7XG4gICAgYnVmQS53cml0ZShzdHJBKTtcbiAgICB2YXIgYnVmQiA9IGJ1ZmZlckFsbG9jKGFMZW4sIDAsICd1dGY4Jyk7XG4gICAgYnVmQi53cml0ZShzdHJCKTtcblxuICAgIHJldHVybiBjcnlwdG8udGltaW5nU2FmZUVxdWFsKGJ1ZkEsIGJ1ZkIpICYmIGFMZW4gPT09IGJMZW47XG59O1xuXG5cbm1vZHVsZS5leHBvcnRzID0gKFxuICAgIHR5cGVvZiBjcnlwdG8udGltaW5nU2FmZUVxdWFsICE9PSAndW5kZWZpbmVkJyA/XG4gICAgICAgIG5hdGl2ZVRpbWluZ1NhZmVFcXVhbCA6XG4gICAgICAgIHNhZmVDb21wYXJlXG4pO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/safe-compare/index.js\n");

/***/ })

};
;